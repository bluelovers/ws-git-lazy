"use strict";
/**
 * Created by user on 2019/6/13.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const git_1 = require("@git-lazy/util/spawn/git");
const glob_sort_1 = require("node-novel-globby/lib/glob-sort");
const array_hyper_unique_1 = require("array-hyper-unique");
const data_1 = require("@git-lazy/util/spawn/data");
const root_1 = require("@git-lazy/root");
const path_1 = __importDefault(require("path"));
function gitUntrackedFile(git_root, options) {
    git_root = root_1.hasGit(git_root);
    const { bin = 'git' } = (options || {});
    let cp = git_1.crossSpawnSync(bin, 'ls-files --others --exclude-standard'.split(' '), {
        cwd: git_root,
        stripAnsi: true,
    });
    return data_1.handleSpawnOutputArray(cp.stdout.toString());
}
exports.gitUntrackedFile = gitUntrackedFile;
function gitUntrackedDir(git_root, options) {
    return glob_sort_1.sortTree(array_hyper_unique_1.array_unique(gitUntrackedFile(git_root, options)
        .map(v => path_1.default.dirname(v))));
}
exports.gitUntrackedDir = gitUntrackedDir;
exports.default = gitUntrackedFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7Ozs7O0FBRUgsa0RBQXlHO0FBQ3pHLCtEQUEyRDtBQUMzRCwyREFBK0Q7QUFDL0Qsb0RBQW1FO0FBQ25FLHlDQUF3QztBQUN4QyxnREFBdUI7QUFPdkIsU0FBZ0IsZ0JBQWdCLENBQUMsUUFBZ0IsRUFBRSxPQUFrQjtJQUVwRSxRQUFRLEdBQUcsYUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBRTNCLE1BQU0sRUFBRSxHQUFHLEdBQUcsS0FBSyxFQUFFLEdBQUcsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUM7SUFFeEMsSUFBSSxFQUFFLEdBQUcsb0JBQWMsQ0FBQyxHQUFHLEVBQUUsc0NBQXNDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQy9FLEdBQUcsRUFBRSxRQUFRO1FBQ2IsU0FBUyxFQUFFLElBQUk7S0FDZixDQUFDLENBQUM7SUFFSCxPQUFPLDZCQUFzQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBWkQsNENBWUM7QUFFRCxTQUFnQixlQUFlLENBQUMsUUFBZ0IsRUFBRSxPQUFrQjtJQUVuRSxPQUFPLG9CQUFRLENBQUMsaUNBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDO1NBQzlELEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLGNBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDOUIsQ0FBQztBQUpELDBDQUlDO0FBRUQsa0JBQWUsZ0JBQWdCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE5LzYvMTMuXG4gKi9cblxuaW1wb3J0IHsgY3Jvc3NTcGF3blN5bmMsIGNyb3NzU3Bhd25Bc3luYywgU3Bhd25PcHRpb25zLCBjaGVja0dpdE91dHB1dCB9IGZyb20gJ0BnaXQtbGF6eS91dGlsL3NwYXduL2dpdCc7XG5pbXBvcnQgeyBzb3J0VHJlZSB9IGZyb20gJ25vZGUtbm92ZWwtZ2xvYmJ5L2xpYi9nbG9iLXNvcnQnO1xuaW1wb3J0IHsgYXJyYXlfdW5pcXVlLCBsYXp5X3VuaXF1ZSB9IGZyb20gJ2FycmF5LWh5cGVyLXVuaXF1ZSc7XG5pbXBvcnQgeyBoYW5kbGVTcGF3bk91dHB1dEFycmF5IH0gZnJvbSAnQGdpdC1sYXp5L3V0aWwvc3Bhd24vZGF0YSc7XG5pbXBvcnQgeyBoYXNHaXQgfSBmcm9tICdAZ2l0LWxhenkvcm9vdCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuXG5leHBvcnQgaW50ZXJmYWNlIElPcHRpb25zXG57XG5cdGJpbj86IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2l0VW50cmFja2VkRmlsZShnaXRfcm9vdDogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpOiBzdHJpbmdbXVxue1xuXHRnaXRfcm9vdCA9IGhhc0dpdChnaXRfcm9vdClcblxuXHRjb25zdCB7IGJpbiA9ICdnaXQnIH0gPSAob3B0aW9ucyB8fCB7fSk7XG5cblx0bGV0IGNwID0gY3Jvc3NTcGF3blN5bmMoYmluLCAnbHMtZmlsZXMgLS1vdGhlcnMgLS1leGNsdWRlLXN0YW5kYXJkJy5zcGxpdCgnICcpLCB7XG5cdFx0Y3dkOiBnaXRfcm9vdCxcblx0XHRzdHJpcEFuc2k6IHRydWUsXG5cdH0pO1xuXG5cdHJldHVybiBoYW5kbGVTcGF3bk91dHB1dEFycmF5KGNwLnN0ZG91dC50b1N0cmluZygpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdpdFVudHJhY2tlZERpcihnaXRfcm9vdDogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpOiBzdHJpbmdbXVxue1xuXHRyZXR1cm4gc29ydFRyZWUoYXJyYXlfdW5pcXVlKGdpdFVudHJhY2tlZEZpbGUoZ2l0X3Jvb3QsIG9wdGlvbnMpXG5cdFx0Lm1hcCh2ID0+IHBhdGguZGlybmFtZSh2KSkpKVxufVxuXG5leHBvcnQgZGVmYXVsdCBnaXRVbnRyYWNrZWRGaWxlXG4iXX0=